openapi: "3.0.0"
info:
  title: Nuts registry API spec
  description: API specification for RPC services available at the nuts-registry
  version: 0.1.0
  license:
    name: GPLv3
paths:
  /api/organization/{id}:
    get:
      summary: "Get organization by id"
      operationId: organizationById
      tags:
        - organizations
      parameters:
        - name: id
          in: path
          description: "URL encoded identifier"
          required: true
          example: "urn:oid:2.16.840.1.113883.2.4.6.1:00000007"
          schema:
            type: string
      responses:
        '200':
          description: OK response with list of valid organizations, list may be empty
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Organization'
        '404':
          description: Unknown organization
          content:
            text/plain:
              schema:
                type: string
    delete:
      summary: "Remove organization by id"
      operationId: deregisterOrganization
      tags:
        - organizations
      parameters:
        - name: id
          in: path
          description: "URL encoded identifier"
          required: true
          example: "urn:oid:2.16.840.1.113883.2.4.6.1:00000007"
          schema:
            type: string
      responses:
        '202':
          description: "OK response"
        '404':
          description: "Unknown organization"
          content:
            text/plain:
              schema:
                type: string
  /api/organizations:
    get:
      summary: "Search for organizations"
      operationId: searchOrganizations
      tags:
        - organizations
      parameters:
        - name: query
          in: query
          description: Search string
          required: true
          schema:
            type: string
        - name: exact
          in: query
          description: Only return exact matches, for reverse lookup
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK response with list of valid organizations, list may be empty
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
        '400':
          description: incorrect search query
          content:
            text/plain:
              example: No search query given
              schema:
                type: string
    post:
      summary: "Add an organization to the registry"
      operationId: "registerOrganization"
      tags:
        - organizations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        '201':
          description: "Organization has been created successfully"
        '400':
          description: "incorrect data"
          content:
            text/plain:
              example:
                "Organization with identifier 00000007 already registered"
  /api/endpoints:
    get:
      summary: Find endpoints based on organisation identifiers and type of endpoint (optional)
      operationId: endpointsByOrganisationId
      tags:
        - endpoints
      parameters:
        - name: orgIds
          in: query
          description: A list of organisation identifiers to query for. identifiers are Nuts Identifiers with proper escaping
          required: true
          schema:
            type: array
            items:
              type: string
              description: URL encoded Identifiers
        - name: type
          in: query
          description: The type of endpoint requested, eg Nuts or FHIR
          required: false
          schema:
            type: string
        - name: strict
          in: query
          required: false
          schema:
            type: boolean
          description: only return successfull result if each given organisation has an endpoint of the requested type, otherwise 400
      responses:
        '200':
          description: OK response with list of valid endpoint-organization tuples, list may be empty
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Endpoint'
        '400':
          description: incorrect search query
          content:
            text/plain:
              examples:
                empty:
                  value: "No organisation identifiers given"
                strict:
                  value: "organization with id X does not have an endpoint of type Y"
              schema:
                type: string
components:
  schemas:
    EndpointOrganization:
      description: "Mapping between Endpoints and Organizations"
      required:
        - endpoint
        - organization
        - status
      properties:
        endpoint:
          $ref: "#/components/schemas/Identifier"
        organization:
          $ref: "#/components/schemas/Identifier"
        status:
          type: string
          enum: ["active", "disabled"]
          description: status of the endpoint
    Organization:
      required:
        - name
        - identifier
      properties:
        name:
          type: string
          description: the well-known name for the organization
          example: Zorggroep Nuts
        identifier:
          $ref: "#/components/schemas/Identifier"
        endpoints:
          type: array
          items:
            $ref: "#/components/schemas/Endpoint"
        publicKey:
          type: string
          description: "PEM encoded public key (deprecated, use JWK)"
        keys:
          type: array
          items:
            $ref: "#/components/schemas/JWK"
    Endpoint:
      required:
        - endpointType
        - identifier
        - status
        - version
        - URL
      properties:
        endpointType:
          type: string
          description: URI of the type of endpoint
          example: "urn:nuts:endpoint:consent"
        identifier:
          $ref: "#/components/schemas/Identifier"
        status:
          type: string
          enum: ["active", "disabled"]
          description: status of the endpoint
        version:
          type: string
          description: version number of the endpoint, used to distinguish between upgrades of endpoint
        URL:
          type: string
          description: location of the actual en endpoint on the internet
          example: tcp://127.0.0.1:1234, https://nuts.nl/endpoint
    Identifier:
      type: string
      description: >
        Generic identifier used for representing BSN, agbcode, etc.
        It's always constructed as an URN followed by a double colon (:) and then the identifying value of the given URN
      example: urn:oid:2.16.840.1.113883.2.4.6.3:999999990
    JWK:
      description: as described by https://tools.ietf.org/html/rfc7517. Modelled as object so libraries can parse the tokens themselves.
      additionalProperties: true
      type: object
#      required:
#        - kty
#      properties:
#        kty:
#          description: "Key type. Current supported values are: oct, RSA, EC"
#          type: string
#        use:
#          description: "Intended use. "
#          type: string
#        kid:
#          type: string
#        alg:
#          type: string
#        n:
#          type: string
#        e:
#          type: string
#        crv:
#          type: string
#        x:
#          type: string
#        y:
#          type: string
#        d:
#          type: string
#        p:
#          type: string
#        q:
#          type: string
#        dp:
#          type: string
#        dq:
#          type: string
#        qi:
#          type: string