.. _nuts-registry-administration:

Nuts Registry Administration
############################

This administration guide will help you to achieve the following goals:

- :ref:`register-vendor-label` (representing your company).
- :ref:`register-organisation-label` as vendor customer, which allows you to register endpoints.
- :ref:`register-endpoint-label` for the care organisation, served by your Nuts node.

Updating the central Nuts Registry
==================================

Currently, the data of the Nuts Registry is centrally hosted on Github. When you want other Nuts nodes to know about your
vendor, care organisations and endpoints you have to submit the data, produced by the administration commands, to get it
included in the registry. To do so, you have to create a pull request on Github for the
`nuts-foundation/nuts-registry-development <https://github.com/nuts-foundation/nuts-registry-development>`_ repository.
Should you be unable to do so, contact the Nuts Foundation for alternatives.

The event data generated by the commands (which you should submit to the central registry) can be copied from either the
CLI console or by copying the files from the registry storage on disk.

Copying files from disk
^^^^^^^^^^^^^^^^^^^^^^^

If you have access to the file system where your Nuts node stores its data, you can simply copy the event files from there.
They are typically stored in the *data/events* directory.

Copying from CLI console
^^^^^^^^^^^^^^^^^^^^^^^^

Alternatively you can copy the output of the CLI commands, since they output the event file name and payload, e.g.:

.. code-block:: shell

    Event: 20200224123533008-RegisterVendorEvent.json
    {"type":"RegisterVendorEvent","issuedAt":"2020-02-24T13:35:33.008076348+01:00","payload":{"identifier":"urn:oid:1.3.6.1.4.1.54851.4:00000001","name":"BecauseWeCare B.V."}}


.. note::

    In the (near) future we will move away from Github to a decentralized registry.

.. _register-vendor-label:

1. Registering a vendor
=======================

This command registers a vendor in the registry, giving it further access to the Nuts Registry. Afterwards, care organisations
can be registered as the organisation's clients. When a vendor is registered, a CA certificate is issued. This certificate is used (by the vendor) to issue certificates,
e.g. care organisation certificates.

To register a vendor, you need its name (as registered at the Chamber of Commerce) and its identifier, which is the company's
URN-encoded Chamber of Commerce registration number.

The syntax of this command is as follows (parameter 'domain' defaults to 'healthcare'):

.. code-block:: shell

    ./nuts registry register-vendor <identifier> <name> <domain>

To register vendor "BecauseWeCare B.V." identified by Chamber of Commerce registration number "00000001", run the following command:

.. code-block:: shell

    NUTS_MODE=cli ./nuts registry register-vendor urn:oid:1.3.6.1.4.1.54851.4:00000001 "BecauseWeCare B.V."

If the command completes successfully, it should output the message: "Vendor registered."

.. note::

    The vendor CA certificate is currently self-signed. In the future, the vendor CA certificate will be issued by the Nuts Foundation.

.. _register-organisation-label:

2. Registering a care organisation
==================================

When a vendor is known in the Nuts Registry, it can register organisation by claiming them (as client). Afterwards
the vendor can register endpoints for the organisation which are served by the vendor's Nuts node. When an organisation
is registered, the vendor CA issues an organisation certificate. Its key is used for encrypting data exchanges and
signing registry operations (e.g. registering endpoints).

To register an organisation, you need the vendor's identifier, organisation name and its identifier, which is the organisation's
URN-encoded AGB-code.

The syntax of this command is as follows:

.. code-block:: shell

    ./nuts registry vendor-claim <vendor-identifier> <organisation-identifier> <organisation-name>

For example:

.. code-block:: shell

    NUTS_MODE=cli ./nuts registry vendor-claim urn:oid:1.3.6.1.4.1.54851.4:00000001 \
        urn:oid:2.16.840.1.113883.2.4.6.1:123456 "Kunstgebit Thuiszorg"

If the command completes successfully, it should output the message: "Vendor organisation claim registered"

.. note::

    Registering an organisation as vendor client is called *claiming* because in future instead of the vendor solely
    registering an organisation being its client, the organisation has to do the same (claim being a client of a software
    vendor). Only if both entities claim to have a relationship with each other, the organisation is registered being a
    client of the vendor.

.. _register-endpoint-label:

3. Registering an endpoint
==========================

After registering an organisation, the vendor can administer its endpoints. The endpoints are used by other Nuts nodes
when they want to exchange data with the Nuts node serving a particular organisation.

The syntax of this command is as follows:

.. code-block:: shell

    ./nuts registry register-endpoint <organisation-identifier> <endpoint-identifier> <type> <url> <version>

In the following example we register a Corda consent endpoint for the previously registered organisation:

.. code-block:: shell

    NUTS_MODE=cli ./nuts registry register-endpoint urn:oid:2.16.840.1.113883.2.4.6.1:123456 \
        "urn:ietf:rfc:1779:O=BecauseWeCare B.V.,C=NL,L=Almere,CN=Kunstgebit Thuiszorg" \
        urn:nuts:endpoint:consent \
        "tcp://1.2.3.4:4321" \
        1.0.0

Endpoints can have extra metadata in the form of string properties. Property are specified as **key=value** using the **-p** flag:

.. code-block:: shell

    NUTS_MODE=cli ./nuts ...(etc) -p key1=Hello -p key2=World
